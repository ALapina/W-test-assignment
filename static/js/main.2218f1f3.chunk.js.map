{"version":3,"sources":["components/SwitchLanguagesButtons/index.tsx","components/Header/index.tsx","components/CreateNewUserButton/index.tsx","components/PageHeader/index.tsx","components/Pagination/index.tsx","utils.ts","components/UsersList/index.tsx","components/CreateNewUser/index.tsx","components/UserDetails/index.tsx","App.tsx","i18n/config.ts","index.tsx"],"names":["languages","en","nativeName","languageCode","es","SwitchLanguagesButtons","i18n","useTranslation","className","Object","keys","map","language","type","onClick","changeLanguage","aria-label","Header","to","CreateNewUserButton","t","PageHeader","title","showButton","Pagination","setCurrentPage","totalPages","currentPage","arrayTotalPages","i","push","pageNumber","fetchUsers","url","a","fetch","response","json","data","method","headers","body","JSON","stringify","Positions","UsersList","useState","users","setUsers","setTotalPages","useEffect","then","page","total_pages","catch","error","console","user","id","first_name","last_name","UserDetails","setUser","useParams","src","avatar","alt","email","initialValues","firstName","lastName","position","dateOfBirth","minDate","Date","setFullYear","getFullYear","CreateNewUser","savedData","setSavedData","CreateNewUserSchema","Yup","shape","matches","required","max","nullable","validationSchema","onSubmit","values","setSubmitting","postNewUser","log","errors","touched","handleChange","setFieldValue","setFieldTouched","name","placeholder","onChange","value","label","disabled","hidden","SoftwareEngineer","Painter","BusDriver","dayPlaceholder","monthPlaceholder","yearPlaceholder","inputValue","App","path","resources","translation","use","initReactI18next","init","lng","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2218f1f3.chunk.js","sourcesContent":["//styles\nimport \"./SwitchLanguagesButtons.scss\";\n\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst languages: { [key: string]: { [key: string]: string } } = {\n  en: { nativeName: \"English\", languageCode: \"en\" },\n  es: { nativeName: \"Spanish\", languageCode: \"es\" },\n};\n\nconst SwitchLanguagesButtons = () => {\n  const { i18n } = useTranslation();\n  return (\n    <div className=\"switch-languages\">\n      {Object.keys(languages).map((language) => (\n        <button\n          key={language}\n          type=\"submit\"\n          onClick={() => i18n.changeLanguage(language)}\n          className={`switch-languages__language-button ${languages[language].languageCode}`}\n          aria-label={`change page language to ${languages[language].nativeName}`}\n        ></button>\n      ))}\n    </div>\n  );\n};\n\nexport default SwitchLanguagesButtons;\n","// router\nimport { Link } from \"react-router-dom\";\n// styles\nimport \"./Header.scss\";\n// components\nimport SwitchLanguagesButtons from \"../SwitchLanguagesButtons\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrapper\">\n        <Link to=\"/\">\n          <h1>Fetch them all</h1>\n        </Link>\n        <SwitchLanguagesButtons />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// Router\nimport { Link } from \"react-router-dom\";\n// Icons\nimport { AiFillPlusCircle } from \"react-icons/ai\";\n//styles\nimport \"./CreateNewUserButton.scss\";\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst CreateNewUserButton = () => {\n  const { t } = useTranslation();\n  return (\n    <Link to=\"/create-new-user\" className=\"create-new-user-button\">\n      <AiFillPlusCircle className=\"plus-icon\" />\n      <span className=\"create-new-user-button__text\">\n        {t(\"create-new-user-button\")}\n      </span>\n    </Link>\n  );\n};\n\nexport default CreateNewUserButton;\n","//components\nimport CreateNewUserButton from \"../CreateNewUserButton\";\n// styles\nimport \"./PageHeader.scss\";\n\ntype PageHeaderProps = {\n  title: string;\n  showButton: boolean;\n};\n\nconst PageHeader = ({ title, showButton }: PageHeaderProps) => {\n  return (\n    <div className=\"users-header\">\n      <h2>{title}</h2>\n      {showButton && <CreateNewUserButton />}\n    </div>\n  );\n};\n\nexport default PageHeader;\n","import \"./Pagination.scss\";\n\ntype PaginationPropsTypes = {\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n  totalPages: number;\n  currentPage: number;\n};\n\nconst Pagination = ({\n  setCurrentPage,\n  totalPages,\n  currentPage,\n}: PaginationPropsTypes) => {\n  const arrayTotalPages: Array<number> = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    arrayTotalPages.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        {arrayTotalPages.map((pageNumber: number) => (\n          <li key={pageNumber}>\n            <button\n              className={`pagination__page-number ${\n                pageNumber === currentPage && `active-page`\n              }`}\n              onClick={() => setCurrentPage(pageNumber)}\n            >\n              {pageNumber}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","export async function fetchUsers(url: string) {\n  const response = await fetch(url);\n  return response.json();\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\nexport async function postNewUser(url: string, data: object): Promise<Object> {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n","import { useState, useEffect } from \"react\";\n// Router\nimport { Link } from \"react-router-dom\";\n// Icons\nimport { RiArrowRightSLine } from \"react-icons/ri\";\n// Styles\nimport \"./UsersList.scss\";\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n//components\nimport PageHeader from \"../PageHeader\";\nimport Pagination from \"../Pagination\";\n\nimport { fetchUsers } from \"../../utils\";\n\ntype UserType = {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n};\n\ntype FetchedUserListDataType = {\n  data: [];\n  page: number;\n  total_pages: number;\n};\n\nconst UsersList = () => {\n  const [users, setUsers] = useState<UserType[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    fetchUsers(`https://reqres.in/api/users?page=${currentPage}`)\n      .then((json: FetchedUserListDataType) => {\n        setUsers(json.data);\n        setCurrentPage(json.page);\n        setTotalPages(json.total_pages);\n      })\n      .catch((error) => console.error(error));\n  }, [currentPage]);\n\n  return (\n    <main>\n      <div className=\"wrapper\">\n        <PageHeader title={t(\"page-headers.part1\")} showButton={true} />\n        <div className=\"users-list\">\n          {users.map((user) => (\n            <Link\n              to={`/user/${user.id}`}\n              className=\"users-list__user\"\n              key={user.id}\n            >\n              <span className=\"users-list__name\">\n                {user.first_name} {user.last_name}\n              </span>\n              <RiArrowRightSLine />\n            </Link>\n          ))}\n        </div>\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default UsersList;\n","// Formik + Typescript\n// https://formik.org/docs/guides/typescript\n// https://formik.org/docs/examples/typescript\n\n// Formik validation with Yup\n// https://formik.org/docs/guides/validation\n// https://github.com/jquense/yup#api\n\n// https://www.npmjs.com/package/react-date-picker\n\nimport { useState } from \"react\";\nimport PageHeader from \"../PageHeader\";\nimport { postNewUser } from \"../../utils\";\nimport { useTranslation } from \"react-i18next\";\n// import DatePicker from \"react-datepicker\";\nimport DatePicker from \"react-date-picker\";\nimport { Formik, FormikHelpers, FormikProps, Form, Field } from \"formik\";\n//Yup for form validation\nimport * as Yup from \"yup\";\n//styles\nimport \"./CreateNewUser.scss\";\n\ninterface FormValues {\n  firstName: string;\n  lastName: string;\n  position: string;\n  dateOfBirth: Date | null;\n}\n\nenum Positions {\n  SoftwareEngineer = \"Software Engineer\",\n  Painter = \"Painter\",\n  BusDriver = \"Bus driver\",\n}\n\nconst initialValues: FormValues = {\n  firstName: \"\",\n  lastName: \"\",\n  position: \"\",\n  dateOfBirth: null,\n};\n\nconst minDate = new Date();\nminDate.setFullYear(minDate.getFullYear() - 18);\n\nconst CreateNewUser = () => {\n  const [savedData, setSavedData] = useState(null as Object | null);\n  const { t } = useTranslation();\n\n  // TODO: Валидацию в use effect? что бы перевод происходил\n  // Form Validation Schema\n  //https://stackoverflow.com/questions/51222559/formik-yup-form-validation-not-working-as-expected-with-virtualizedselect\n  //https://github.com/jquense/yup#mixednullableisnullable-boolean--true-schema\n  const CreateNewUserSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .matches(/^[a-z\\s]+$/i, \"Only latin craracters pls\")\n      .required(t(\"form-validation.required\")),\n    lastName: Yup.string()\n      .matches(/^[a-z\\s]+$/i, \"Only latin craracters pls\")\n      .required(t(\"form-validation.required\")),\n    dateOfBirth: Yup.date()\n      .max(minDate, t(\"form-validation.over18years\"))\n      .required(t(\"form-validation.required\"))\n      .nullable(),\n  });\n\n  return (\n    <div className=\"wrapper\">\n      <PageHeader title={t(\"page-headers.part3\")} showButton={false} />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={CreateNewUserSchema}\n        onSubmit={(\n          values: FormValues,\n          { setSubmitting }: FormikHelpers<FormValues>\n        ) => {\n          postNewUser(\"https://reqres.in/api/users/\", values)\n            .then((data) => {\n              setSavedData(data);\n              console.log(data);\n            })\n            .catch((error) => console.error(error));\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldValue,\n          setFieldTouched,\n        }: FormikProps<FormValues>) => (\n          <Form>\n            <label>\n              First Name:\n              <Field\n                name=\"firstName\"\n                placeholder=\"enter your first name\"\n                required\n              />\n              {errors.firstName && touched.firstName && (\n                <div>{errors.firstName}</div>\n              )}\n            </label>\n            <br />\n            <label>\n              Last Name:\n              <Field\n                className={errors.lastName && touched.lastName ? \"red\" : null}\n                name=\"lastName\"\n                placeholder=\"enter your last name\"\n                required\n              />\n              {errors.lastName && touched.lastName ? (\n                <div>{errors.lastName}</div>\n              ) : null}\n            </label>\n            <br />\n\n            <label>\n              Occupation\n              {/* https://codesandbox.io/s/vxv6q4z5?file=/index.js:943-949 */}\n              <select\n                onChange={handleChange}\n                name=\"position\"\n                value={values.position}\n                required\n              >\n                <option value=\"\" label=\"Select occupation\" disabled hidden />\n                <option value={Positions.SoftwareEngineer}>\n                  {Positions.SoftwareEngineer}\n                </option>\n                <option value={Positions.Painter}>{Positions.Painter}</option>\n                <option value={Positions.BusDriver}>\n                  {Positions.BusDriver}\n                </option>\n              </select>\n            </label>\n            <br />\n\n            <label>\n              Date of Birth:\n              <DatePicker\n                dayPlaceholder=\"dd\"\n                monthPlaceholder=\"mm\"\n                yearPlaceholder=\"yyyy\"\n                className={`date-picker ${\n                  errors.dateOfBirth && touched.dateOfBirth ? \"red\" : \"green\"\n                }`}\n                name=\"dateOfBirth\"\n                value={values.dateOfBirth}\n                // https://stackoverflow.com/questions/56312372/react-datepicker-with-a-formik-form\n                onChange={async (inputValue) => {\n                  console.log(inputValue);\n                  await setFieldValue(\"dateOfBirth\", inputValue, false);\n                  setFieldTouched(\"dateOfBirth\", true);\n                }}\n              />\n              {touched.dateOfBirth && errors.dateOfBirth && (\n                <div>{errors.dateOfBirth}</div>\n              )}\n            </label>\n\n            <br />\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n      {savedData && <div>Response result: {JSON.stringify(savedData)}</div>}\n    </div>\n  );\n};\n\nexport default CreateNewUser;\n\n// https://medium.com/flyparakeet/react-formik-styled-components-add78b37971f\n\n// https://formik.org/docs/guides/validation\n// https://github.com/jquense/yup#api\n\n// https://www.npmjs.com/package/react-date-picker\n\n// https://formik.org/docs/guides/validation\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PageHeader from \"../PageHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { fetchUsers } from \"../../utils\";\nimport \"./UserDetails.scss\";\n\ntype RouteParams = {\n  id: string;\n};\n\ntype UserType = {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n};\n\ntype FetchedUserDataType = {\n  data: UserType;\n};\n\nconst UserDetails = () => {\n  const [user, setUser] = useState({} as UserType);\n  let { id } = useParams<RouteParams>();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    fetchUsers(`https://reqres.in/api/users/${id}`)\n      .then((json: FetchedUserDataType) => {\n        setUser(json.data);\n      })\n      .catch((error) => console.error(error));\n  }, [id]);\n\n  return (\n    <div className=\"wrapper\">\n      <PageHeader title={t(\"page-headers.part2\")} showButton={true} />\n      <div className=\"user-details\">\n        <img\n          className=\"user-details__avatar\"\n          src={user.avatar}\n          alt={user.first_name}\n        />\n        <div className=\"dividing-line\"></div>\n        <p>\n          {user.first_name} {user.last_name}\n        </p>\n        <p className=\"user-details__email\">{user.email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetails;\n","// Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//components\nimport Header from \"./components/Header\";\nimport UsersList from \"./components/UsersList\";\nimport UserDetails from \"./components/UserDetails\";\nimport CreateNewUser from \"./components/CreateNewUser\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/user/:id\">\n          <UserDetails />\n        </Route>\n        <Route path=\"/create-new-user\">\n          <CreateNewUser />\n        </Route>\n        <Route path=\"/\">\n          <UsersList />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport EnglishTranslation from \"./en/english-translation.json\";\nimport SpanishTranslation from \"./es/spanish-translation.json\";\n\nexport const resources = {\n  en: { translation: EnglishTranslation },\n  es: { translation: SpanishTranslation },\n};\n\ni18n.use(initReactI18next).init({\n  // debug: true,\n  lng: \"en\",\n  resources,\n});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.scss\";\nimport App from \"./App\";\n\n// multi language framework react-i18next\nimport \"./i18n/config\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}