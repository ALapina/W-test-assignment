{"version":3,"sources":["components/SwitchLanguagesButtons/index.tsx","components/Header/index.tsx","components/CreateNewUserButton/index.tsx","components/PageHeader/index.tsx","components/Pagination/index.tsx","utils.ts","components/UsersList/index.tsx","components/CreateNewUser/index.tsx","components/UserDetails/index.tsx","App.tsx","i18n/config.ts","index.tsx"],"names":["languages","en","nativeName","languageCode","es","SwitchLanguagesButtons","i18n","useTranslation","className","Object","keys","map","language","type","onClick","changeLanguage","aria-label","Header","to","CreateNewUserButton","t","PageHeader","title","showButton","Pagination","setCurrentPage","totalPages","currentPage","arrayTotalPages","i","push","pageNumber","url","a","fetch","response","json","Positions","UsersList","useState","users","setUsers","setTotalPages","useEffect","fetchUsers","then","data","page","total_pages","catch","error","console","user","id","first_name","last_name","UserDetails","setUser","useParams","log","src","avatar","alt","email","minDate","Date","setFullYear","getFullYear","CreateNewUserSchema","Yup","shape","firstName","matches","required","lastName","date","max","method","headers","body","JSON","stringify","CreateNewUser","savedData","setSavedData","initialValues","position","validationSchema","onSubmit","values","setSubmitting","postNewUser","errors","touched","handleChange","name","placeholder","onChange","value","label","disabled","hidden","SoftwareEngineer","Painter","BusDriver","App","path","resources","translation","use","initReactI18next","init","lng","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce1f5413.chunk.js","sourcesContent":["//styles\nimport \"./SwitchLanguagesButtons.scss\";\n\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst languages: { [key: string]: { [key: string]: string } } = {\n  en: { nativeName: \"English\", languageCode: \"en\" },\n  es: { nativeName: \"Spanish\", languageCode: \"es\" },\n};\n\nconst SwitchLanguagesButtons = () => {\n  const { i18n } = useTranslation();\n  return (\n    <div className=\"switch-languages\">\n      {Object.keys(languages).map((language) => (\n        <button\n          key={language}\n          type=\"submit\"\n          onClick={() => i18n.changeLanguage(language)}\n          className={`switch-languages__language-button ${languages[language].languageCode}`}\n          aria-label={`change page language to ${languages[language].nativeName}`}\n        ></button>\n      ))}\n    </div>\n  );\n};\n\nexport default SwitchLanguagesButtons;\n","// router\nimport { Link } from \"react-router-dom\";\n// styles\nimport \"./Header.scss\";\n// components\nimport SwitchLanguagesButtons from \"../SwitchLanguagesButtons\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrapper\">\n        <Link to=\"/\">\n          <h1>Fetch them all</h1>\n        </Link>\n        <SwitchLanguagesButtons />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// Router\nimport { Link } from \"react-router-dom\";\n// Icons\nimport { AiFillPlusCircle } from \"react-icons/ai\";\n//styles\nimport \"./CreateNewUserButton.scss\";\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst CreateNewUserButton = () => {\n  const { t } = useTranslation();\n  return (\n    <Link to=\"/create-new-user\" className=\"create-new-user-button\">\n      <AiFillPlusCircle className=\"plus-icon\" />\n      <span className=\"create-new-user-button__text\">\n        {t(\"create-new-user-button\")}\n      </span>\n    </Link>\n  );\n};\n\nexport default CreateNewUserButton;\n","//components\nimport CreateNewUserButton from \"../CreateNewUserButton\";\n// styles\nimport \"./PageHeader.scss\";\n\ntype PageHeaderProps = {\n  title: string;\n  showButton: boolean;\n};\n\nconst PageHeader = ({ title, showButton }: PageHeaderProps) => {\n  return (\n    <div className=\"users-header\">\n      <h2>{title}</h2>\n      {showButton && <CreateNewUserButton />}\n    </div>\n  );\n};\n\nexport default PageHeader;\n","import \"./Pagination.scss\";\n\ntype PaginationPropsTypes = {\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n  totalPages: number;\n  currentPage: number;\n};\n\nconst Pagination = ({\n  setCurrentPage,\n  totalPages,\n  currentPage,\n}: PaginationPropsTypes) => {\n  const arrayTotalPages: Array<number> = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    arrayTotalPages.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        {arrayTotalPages.map((pageNumber: number) => (\n          <li key={pageNumber}>\n            <button\n              className={`pagination__page-number ${\n                pageNumber === currentPage && `active-page`\n              }`}\n              onClick={() => setCurrentPage(pageNumber)}\n            >\n              {pageNumber}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","type FetchedDataType = {\n  data: [];\n  page: number;\n  total_pages: number;\n};\n\nexport async function fetchUsers(url: string): Promise<FetchedDataType> {\n  const response = await fetch(url);\n  return response.json();\n}\n","import { useState, useEffect } from \"react\";\n// Router\nimport { Link } from \"react-router-dom\";\n// Icons\nimport { RiArrowRightSLine } from \"react-icons/ri\";\n// Styles\nimport \"./UsersList.scss\";\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n//components\nimport PageHeader from \"../PageHeader\";\nimport Pagination from \"../Pagination\";\n\nimport { fetchUsers } from \"../../utils\";\n\ntype UserType = {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n};\n\nconst UsersList = () => {\n  const [users, setUsers] = useState<UserType[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    fetchUsers(`https://reqres.in/api/users?page=${currentPage}`)\n      .then((json) => {\n        setUsers(json.data);\n        setCurrentPage(json.page);\n        setTotalPages(json.total_pages);\n      })\n      .catch((error) => console.error(error));\n  }, [currentPage]);\n\n  return (\n    <main>\n      <div className=\"wrapper\">\n        <PageHeader title={t(\"page-headers.part1\")} showButton={true} />\n        <div className=\"users-list\">\n          {users.map((user) => (\n            <Link\n              to={`/user/${user.id}`}\n              className=\"users-list__user\"\n              key={user.id}\n            >\n              <span className=\"users-list__name\">\n                {user.first_name} {user.last_name}\n              </span>\n              <RiArrowRightSLine />\n            </Link>\n          ))}\n        </div>\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default UsersList;\n","// https://formik.org/docs/guides/typescript\n\n// https://formik.org/docs/examples/typescript\n\n// https://formik.org/docs/guides/validation\n// https://github.com/jquense/yup#api\n\n// https://www.npmjs.com/package/react-date-picker\n\nimport { useState } from \"react\";\n\nimport { Formik, FormikHelpers, FormikProps, Form, Field } from \"formik\";\n\n//Yup for form validation\nimport * as Yup from \"yup\";\n\n//components\nimport PageHeader from \"../PageHeader\";\n\n//styles\nimport \"./CreateNewUser.scss\";\n\nconst minDate = new Date();\nminDate.setFullYear(minDate.getFullYear() - 18);\n\ninterface FormValues {\n  firstName: string;\n  lastName: string;\n  position: string;\n  date: Date | string;\n}\n\nenum Positions {\n  SoftwareEngineer = \"Software Engineer\",\n  Painter = \"Painter\",\n  BusDriver = \"Bus driver\",\n}\n\n//https://stackoverflow.com/questions/51222559/formik-yup-form-validation-not-working-as-expected-with-virtualizedselect\n// https://github.com/jquense/yup#mixednullableisnullable-boolean--true-schema\nconst CreateNewUserSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .matches(/^[a-z\\s]+$/i, \"Only latin craracters pls\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .matches(/^[a-z\\s]+$/i, \"Only latin craracters pls\")\n    .required(\"Required\"),\n  date: Yup.date()\n    .max(minDate, \"Sorry you must be 18 years old\")\n    .required(\"Required\"),\n});\n\n//https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\nasync function postNewUser(url: string, data: FormValues): Promise<Object> {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n\nconst CreateNewUser = () => {\n  const [savedData, setSavedData] = useState(null as Object | null);\n\n  const initialValues: FormValues = {\n    firstName: \"\",\n    lastName: \"\",\n    position: \"\",\n    date: \"\",\n  };\n  return (\n    <div className=\"wrapper\">\n      <PageHeader title={\"Create New User\"} showButton={false} />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={CreateNewUserSchema}\n        onSubmit={(\n          values: FormValues,\n          { setSubmitting }: FormikHelpers<FormValues>\n        ) => {\n          postNewUser(\"https://reqres.in/api/users/\", values)\n            .then((data) => {\n              setSavedData(data);\n              console.log(data);\n            })\n            .catch((error) => console.error(error));\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n        }: FormikProps<FormValues>) => (\n          <Form>\n            <label>\n              First Name:\n              <Field\n                name=\"firstName\"\n                placeholder=\"enter your first name\"\n                required\n              />\n              {errors.firstName && touched.firstName && (\n                <div>{errors.firstName}</div>\n              )}\n            </label>\n            <br />\n            <label>\n              Last Name:\n              <Field\n                className={errors.lastName && touched.lastName ? \"red\" : null}\n                name=\"lastName\"\n                placeholder=\"enter your last name\"\n                required\n              />\n              {errors.lastName && touched.lastName ? (\n                <div>{errors.lastName}</div>\n              ) : null}\n            </label>\n            <br />\n\n            <label>\n              Occupation\n              {/* https://codesandbox.io/s/vxv6q4z5?file=/index.js:943-949 */}\n              <select\n                onChange={handleChange}\n                name=\"position\"\n                value={values.position}\n                required\n              >\n                <option value=\"\" label=\"Select occupation\" disabled hidden />\n                <option value={Positions.SoftwareEngineer}>\n                  {Positions.SoftwareEngineer}\n                </option>\n                <option value={Positions.Painter}>{Positions.Painter}</option>\n                <option value={Positions.BusDriver}>\n                  {Positions.BusDriver}\n                </option>\n              </select>\n            </label>\n            <br />\n\n            <label>\n              Date of Birth:\n              <Field\n                required\n                type=\"date\"\n                name=\"date\"\n                className={`date-picker ${errors.date ? \"red\" : \"green\"}`}\n              />\n              {errors.date && touched.date ? <div>{errors.date}</div> : null}\n            </label>\n\n            <br />\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n      {savedData && <div>Response result: {JSON.stringify(savedData)}</div>}\n    </div>\n  );\n};\n\nexport default CreateNewUser;\n\n// https://medium.com/flyparakeet/react-formik-styled-components-add78b37971f\n\n// https://formik.org/docs/guides/validation\n// https://github.com/jquense/yup#api\n\n// https://www.npmjs.com/package/react-date-picker\n\n// https://formik.org/docs/guides/validation\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n//components\nimport PageHeader from \"../PageHeader\";\n\n//styles\nimport \"./UserDetails.scss\";\n\ntype RouteParams = {\n  id: string;\n};\n\ntype UserType = {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n};\n\nconst UserDetails = () => {\n  const [user, setUser] = useState({} as UserType);\n  let { id } = useParams<RouteParams>();\n\n  async function fetchUsers(id: string) {\n    const response = await fetch(`https://reqres.in/api/users/${id}`);\n    const json = await response.json();\n    setUser(json.data);\n  }\n\n  useEffect(() => {\n    fetchUsers(id);\n  }, [id]);\n\n  console.log(user);\n\n  return (\n    <div className=\"wrapper\">\n      <PageHeader title={\"User Details\"} showButton={true} />\n      <div className=\"user-details\">\n        <img src={user.avatar} alt={user?.first_name} />\n        <p>{user.first_name}</p>\n        <p>{user.last_name}</p>\n        <p>{user.email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetails;\n","// Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//components\nimport Header from \"./components/Header\";\nimport UsersList from \"./components/UsersList\";\nimport UserDetails from \"./components/UserDetails\";\nimport CreateNewUser from \"./components/CreateNewUser\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/user/:id\">\n          <UserDetails />\n        </Route>\n        <Route path=\"/create-new-user\">\n          <CreateNewUser />\n        </Route>\n        <Route path=\"/\">\n          <UsersList />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport EnglishTranslation from \"./en/english-translation.json\";\nimport SpanishTranslation from \"./es/spanish-translation.json\";\n\nexport const resources = {\n  en: { translation: EnglishTranslation },\n  es: { translation: SpanishTranslation },\n};\n\ni18n.use(initReactI18next).init({\n  // debug: true,\n  lng: \"en\",\n  resources,\n});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.scss\";\nimport App from \"./App\";\n\n// multi language framework react-i18next\nimport \"./i18n/config\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}