{"version":3,"sources":["components/SwitchLanguagesButtons/index.tsx","components/Header/index.tsx","components/CreateNewUserButton/index.tsx","components/PageHeader/index.tsx","components/Pagination/index.tsx","utils.ts","components/UsersList/index.tsx","components/CreateNewUser/index.tsx","components/UserDetails/index.tsx","App.tsx","i18n/config.ts","index.tsx"],"names":["languages","en","nativeName","languageCode","es","SwitchLanguagesButtons","i18n","useTranslation","className","Object","keys","map","language","type","onClick","changeLanguage","aria-label","Header","to","CreateNewUserButton","t","PageHeader","title","showButton","Pagination","setCurrentPage","totalPages","currentPage","arrayTotalPages","i","push","pageNumber","fetchUsers","url","a","fetch","response","json","data","method","headers","body","JSON","stringify","maxAllowedDateOfBirth","maxDate","Date","setFullYear","getFullYear","Positions","UsersList","useState","users","setUsers","setTotalPages","useEffect","then","page","total_pages","catch","error","console","user","id","first_name","last_name","UserDetails","setUser","useParams","src","avatar","alt","email","initialValues","firstName","lastName","position","dateOfBirth","CreateNewUser","savedData","setSavedData","CreateNewUserSchema","Yup","shape","matches","required","max","nullable","validationSchema","onSubmit","values","setSubmitting","postNewUser","errors","touched","handleChange","setFieldValue","setFieldTouched","name","placeholder","onChange","value","label","disabled","hidden","SoftwareEngineer","Painter","BusDriver","dayPlaceholder","monthPlaceholder","yearPlaceholder","inputValue","App","path","resources","translation","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g0DAMMA,EAA0D,CAC9DC,GAAI,CAAEC,WAAY,UAAWC,aAAc,MAC3CC,GAAI,CAAEF,WAAY,UAAWC,aAAc,OAoB9BE,EAjBgB,WAAO,IAC5BC,EAASC,cAATD,KACR,OACE,qBAAKE,UAAU,mBAAf,SACGC,OAAOC,KAAKV,GAAWW,KAAI,SAACC,GAAD,OAC1B,wBAEEC,KAAK,SACLC,QAAS,kBAAMR,EAAKS,eAAeH,IACnCJ,UAAS,4CAAuCR,EAAUY,GAAUT,cACpEa,aAAA,kCAAuChB,EAAUY,GAAUV,aAJtDU,SCGAK,EAbA,WACb,OACE,wBAAQT,UAAU,SAAlB,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMU,GAAG,IAAT,SACE,kDAEF,cAAC,EAAD,U,gCCOOC,G,OAZa,WAAO,IACzBC,EAAMb,cAANa,EACR,OACE,eAAC,IAAD,CAAMF,GAAG,mBAAmBV,UAAU,yBAAtC,UACE,cAAC,IAAD,CAAkBA,UAAU,cAC5B,sBAAMA,UAAU,+BAAhB,SACGY,EAAE,iCCIIC,G,OATI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,WAC3B,OACE,sBAAKf,UAAU,eAAf,UACE,6BAAKc,IACJC,GAAc,cAAC,EAAD,SCyBNC,G,OA/BI,SAAC,GAOlB,IAH2B,IAH3BC,EAG0B,EAH1BA,eACAC,EAE0B,EAF1BA,WACAC,EAC0B,EAD1BA,YAEMC,EAAiC,GAE9BC,EAAI,EAAGA,GAAKH,EAAYG,IAC/BD,EAAgBE,KAAKD,GAGvB,OACE,qBAAKrB,UAAU,aAAf,SACE,oBAAIA,UAAU,mBAAd,SACGoB,EAAgBjB,KAAI,SAACoB,GAAD,OACnB,6BACE,wBACEvB,UAAS,kCACPuB,IAAeJ,GAAf,eAEFb,QAAS,kBAAMW,EAAeM,IAJhC,SAMGA,KAPIA,Y,yBCvBZ,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,eAAAC,EAAA,sEACkBC,MAAMF,GADxB,cACCG,EADD,yBAEEA,EAASC,QAFX,4C,kEAKA,WAA2BJ,EAAaK,GAAxC,eAAAJ,EAAA,sEACkBC,MAAMF,EAAK,CAChCM,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,KAJlB,cACCF,EADD,yBAMEA,EAASC,QANX,4C,sBASA,SAASO,IACd,IAAMC,EAAU,IAAIC,KAEpB,OADAD,EAAQE,YAAYF,EAAQG,cAAgB,IACrCH,ECYT,ICXKI,EDuDUC,EA5CG,WAAO,IAAD,EACIC,mBAAqB,IADzB,mBACfC,EADe,KACRC,EADQ,OAEgBF,mBAAiB,GAFjC,mBAEfxB,EAFe,KAEFF,EAFE,OAGc0B,mBAAiB,GAH/B,mBAGfzB,EAHe,KAGH4B,EAHG,KAIdlC,EAAMb,cAANa,EAYR,OAVAmC,qBAAU,WACRvB,EAAW,oCAAD,OAAqCL,IAC5C6B,MAAK,SAACnB,GACLgB,EAAShB,EAAKC,MACdb,EAAeY,EAAKoB,MACpBH,EAAcjB,EAAKqB,gBAEpBC,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,QACjC,CAACjC,IAGF,+BACE,sBAAKnB,UAAU,UAAf,UACE,cAAC,EAAD,CAAYc,MAAOF,EAAE,sBAAuBG,YAAY,IACxD,qBAAKf,UAAU,aAAf,SACG4C,EAAMzC,KAAI,SAACmD,GAAD,OACT,eAAC,IAAD,CACE5C,GAAE,gBAAW4C,EAAKC,IAClBvD,UAAU,mBAFZ,UAKE,uBAAMA,UAAU,mBAAhB,UACGsD,EAAKE,WADR,IACqBF,EAAKG,aAE1B,cAAC,IAAD,MALKH,EAAKC,SAShB,cAAC,EAAD,CACErC,WAAYA,EACZC,YAAaA,EACbF,eAAgBA,UEXXyC,G,OAhCK,WAAO,IAAD,EACAf,mBAAS,IADT,mBACjBW,EADiB,KACXK,EADW,KAElBJ,EAAOK,cAAPL,GACE3C,EAAMb,cAANa,EAUR,OARAmC,qBAAU,WACRvB,EAAW,+BAAD,OAAgC+B,IACvCP,MAAK,SAACnB,GACL8B,EAAQ9B,EAAKC,SAEdqB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,QACjC,CAACG,IAGF,sBAAKvD,UAAU,UAAf,UACE,cAAC,EAAD,CAAYc,MAAOF,EAAE,sBAAuBG,YAAY,IACxD,sBAAKf,UAAU,eAAf,UACE,qBACEA,UAAU,uBACV6D,IAAKP,EAAKQ,OACVC,IAAKT,EAAKE,aAEZ,qBAAKxD,UAAU,kBACf,8BACGsD,EAAKE,WADR,IACqBF,EAAKG,aAE1B,mBAAGzD,UAAU,sBAAb,SAAoCsD,EAAKU,gB,kDD/B5CvB,K,qCAAAA,E,kBAAAA,E,wBAAAA,M,KAML,IAAMwB,EAA4B,CAChCC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,YAAa,MAkKAC,EA/JO,WAAO,IAAD,EACQ3B,mBAAS,MADjB,mBACnB4B,EADmB,KACRC,EADQ,KAElB5D,EAAMb,cAANa,EAGF6D,EAAsBC,MAAaC,MAAM,CAC7CT,UAAWQ,MACRE,QAAQ,cAAehE,EAAE,8BACzBiE,SAASjE,EAAE,kCACduD,SAAUO,MACPE,QAAQ,cAAehE,EAAE,8BACzBiE,SAASjE,EAAE,kCACdyD,YAAaK,MACVI,IAAI1C,IAAyBxB,EAAE,qCAC/BiE,SAASjE,EAAE,kCACXmE,aAGL,OACE,sBAAK/E,UAAU,UAAf,UACE,cAAC,EAAD,CAAYc,MAAOF,EAAE,sBAAuBG,YAAY,IAExD,cAAC,IAAD,CACEkD,cAAeA,EACfe,iBAAkBP,EAClBQ,SAAU,SACRC,EADQ,GAGJ,IADFC,EACC,EADDA,eFrDL,SAAP,qCEuDUC,CAAY,+BAAgCF,GACzClC,MAAK,SAAClB,GACL0C,EAAa1C,MAEdqB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,MAClC+B,GAAc,IAZlB,SAeG,gBACCD,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,cACAC,EAND,EAMCA,gBAND,OAQC,eAAC,IAAD,CAAMzF,UAAU,OAAhB,UACE,qBAAKA,UAAU,wBAAf,SACE,kCACGY,EAAE,mBACH,cAAC,IAAD,CACEZ,UAAS,sBACPqF,EAAOnB,WACPoB,EAAQpB,WACR,0BAEFwB,KAAK,YACLC,YAAa/E,EAAE,+BACfiE,UAAQ,IAEV,qBAAK7E,UAAU,iCAAf,SACGqF,EAAOnB,WACNoB,EAAQpB,WADT,UAEImB,EAAOnB,kBAKlB,qBAAKlE,UAAU,wBAAf,SACE,kCACGY,EAAE,kBACH,cAAC,IAAD,CACEZ,UAAS,sBACPqF,EAAOlB,UACPmB,EAAQnB,UACR,0BAEFuB,KAAK,WACLC,YAAa/E,EAAE,8BACfiE,UAAQ,IAEV,qBAAK7E,UAAU,iCAAf,SACGqF,EAAOlB,UAAYmB,EAAQnB,UAA3B,UAA0CkB,EAAOlB,iBAKxD,qBAAKnE,UAAU,wBAAf,SACE,kCACGY,EAAE,mBACH,yBACEZ,UAAU,cACV4F,SAAUL,EACVG,KAAK,WACLG,MAAOX,EAAOd,SACdS,UAAQ,EALV,UAOE,wBACEgB,MAAM,GACNC,MAAOlF,EAAE,+BACTmF,UAAQ,EACRC,QAAM,IAER,wBAAQH,MAAOpD,EAAUwD,iBAAzB,SACGrF,EAAE,gCAEL,wBAAQiF,MAAOpD,EAAUyD,QAAzB,SACGtF,EAAE,uBAEL,wBAAQiF,MAAOpD,EAAU0D,UAAzB,SACGvF,EAAE,iCAMX,qBAAKZ,UAAU,wBAAf,SACE,kCACGY,EAAE,sBACH,cAAC,IAAD,CACEwF,eAAe,KACfC,iBAAiB,KACjBC,gBAAgB,OAChBtG,UAAS,wCACPqF,EAAOhB,aACPiB,EAAQjB,aACR,0BAEFqB,KAAK,cACLG,MAAOX,EAAOb,YACduB,SAAQ,uCAAE,WAAOW,GAAP,SAAA7E,EAAA,sEACF8D,EAAc,cAAee,GAD3B,OAERd,EAAgB,eAAe,GAFvB,2CAAF,wDAKV,qBAAKzF,UAAU,iCAAf,SACGqF,EAAOhB,aACNiB,EAAQjB,aADT,UAEIgB,EAAOhB,oBAKlB,qBAAKrE,UAAU,eAAf,SACE,wBAAQA,UAAU,0BAA0BK,KAAK,SAAjD,SACGO,EAAE,oCAOb,8BACG2D,GAAS,UACL3D,EAAE,wBADG,YACwBsB,KAAKC,UAAUoC,UE5J1CiC,MAnBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,a,yBCdGC,EAAY,CACvBjH,GAAI,CAAEkH,Y,QACN/G,GAAI,CAAE+G,Y,SAGR7G,IACG8G,IAAIC,KACJD,IAAIE,KACJC,KAAK,CAEJC,YAAa,KACbC,cAAe,CACbC,aAAa,GAEfR,cAGW5G,EAAf,EChBAqH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e8819672.chunk.js","sourcesContent":["//styles\nimport \"./SwitchLanguagesButtons.scss\";\n\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst languages: { [key: string]: { [key: string]: string } } = {\n  en: { nativeName: \"English\", languageCode: \"en\" },\n  es: { nativeName: \"Spanish\", languageCode: \"es\" },\n};\n\nconst SwitchLanguagesButtons = () => {\n  const { i18n } = useTranslation();\n  return (\n    <div className=\"switch-languages\">\n      {Object.keys(languages).map((language) => (\n        <button\n          key={language}\n          type=\"submit\"\n          onClick={() => i18n.changeLanguage(language)}\n          className={`switch-languages__language-button ${languages[language].languageCode}`}\n          aria-label={`change page language to ${languages[language].nativeName}`}\n        ></button>\n      ))}\n    </div>\n  );\n};\n\nexport default SwitchLanguagesButtons;\n","// router\nimport { Link } from \"react-router-dom\";\n// styles\nimport \"./Header.scss\";\n// components\nimport SwitchLanguagesButtons from \"../SwitchLanguagesButtons\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__wrapper\">\n        <Link to=\"/\">\n          <h1>Fetch them all</h1>\n        </Link>\n        <SwitchLanguagesButtons />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// Router\nimport { Link } from \"react-router-dom\";\n// Icons\nimport { AiFillPlusCircle } from \"react-icons/ai\";\n//styles\nimport \"./CreateNewUserButton.scss\";\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst CreateNewUserButton = () => {\n  const { t } = useTranslation();\n  return (\n    <Link to=\"/create-new-user\" className=\"create-new-user-button\">\n      <AiFillPlusCircle className=\"plus-icon\" />\n      <span className=\"create-new-user-button__text\">\n        {t(\"create-new-user-button\")}\n      </span>\n    </Link>\n  );\n};\n\nexport default CreateNewUserButton;\n","//components\nimport CreateNewUserButton from \"../CreateNewUserButton\";\n// styles\nimport \"./PageHeader.scss\";\n\ntype PageHeaderProps = {\n  title: string;\n  showButton: boolean;\n};\n\nconst PageHeader = ({ title, showButton }: PageHeaderProps) => {\n  return (\n    <div className=\"users-header\">\n      <h2>{title}</h2>\n      {showButton && <CreateNewUserButton />}\n    </div>\n  );\n};\n\nexport default PageHeader;\n","import \"./Pagination.scss\";\n\ntype PaginationPropsTypes = {\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n  totalPages: number;\n  currentPage: number;\n};\n\nconst Pagination = ({\n  setCurrentPage,\n  totalPages,\n  currentPage,\n}: PaginationPropsTypes) => {\n  const arrayTotalPages: Array<number> = [];\n\n  for (let i = 1; i <= totalPages; i++) {\n    arrayTotalPages.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        {arrayTotalPages.map((pageNumber: number) => (\n          <li key={pageNumber}>\n            <button\n              className={`pagination__page-number ${\n                pageNumber === currentPage && `active-page`\n              }`}\n              onClick={() => setCurrentPage(pageNumber)}\n            >\n              {pageNumber}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","export async function fetchUsers(url: string) {\n  const response = await fetch(url);\n  return response.json();\n}\n\nexport async function postNewUser(url: string, data: object): Promise<Object> {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n\nexport function maxAllowedDateOfBirth(): Date {\n  const maxDate = new Date();\n  maxDate.setFullYear(maxDate.getFullYear() - 18);\n  return maxDate;\n}\n","import { useState, useEffect } from \"react\";\n// Router\nimport { Link } from \"react-router-dom\";\n// Icons\nimport { RiArrowRightSLine } from \"react-icons/ri\";\n// Styles\nimport \"./UsersList.scss\";\n// multi language react-i18next\nimport { useTranslation } from \"react-i18next\";\n//components\nimport PageHeader from \"../PageHeader\";\nimport Pagination from \"../Pagination\";\n\nimport { fetchUsers } from \"../../utils\";\n\ntype UserType = {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n};\n\ntype FetchedUserListDataType = {\n  data: [];\n  page: number;\n  total_pages: number;\n};\n\nconst UsersList = () => {\n  const [users, setUsers] = useState<UserType[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    fetchUsers(`https://reqres.in/api/users?page=${currentPage}`)\n      .then((json: FetchedUserListDataType) => {\n        setUsers(json.data);\n        setCurrentPage(json.page);\n        setTotalPages(json.total_pages);\n      })\n      .catch((error) => console.error(error));\n  }, [currentPage]);\n\n  return (\n    <main>\n      <div className=\"wrapper\">\n        <PageHeader title={t(\"page-headers.part1\")} showButton={true} />\n        <div className=\"users-list\">\n          {users.map((user) => (\n            <Link\n              to={`/user/${user.id}`}\n              className=\"users-list__user\"\n              key={user.id}\n            >\n              <span className=\"users-list__name\">\n                {user.first_name} {user.last_name}\n              </span>\n              <RiArrowRightSLine />\n            </Link>\n          ))}\n        </div>\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default UsersList;\n","import { useState } from \"react\";\nimport PageHeader from \"../PageHeader\";\nimport { postNewUser, maxAllowedDateOfBirth } from \"../../utils\";\nimport { useTranslation } from \"react-i18next\";\nimport DatePicker from \"react-date-picker\";\nimport { Formik, FormikHelpers, FormikProps, Form, Field } from \"formik\";\n//Yup for form validation\nimport * as Yup from \"yup\";\n//styles\nimport \"./CreateNewUser.scss\";\n\ninterface FormValues {\n  firstName: string;\n  lastName: string;\n  position: string;\n  dateOfBirth: Date | null;\n}\n\nenum Positions {\n  SoftwareEngineer = \"Software Engineer\",\n  Painter = \"Painter\",\n  BusDriver = \"Bus driver\",\n}\n\nconst initialValues: FormValues = {\n  firstName: \"\",\n  lastName: \"\",\n  position: \"\",\n  dateOfBirth: null,\n};\n\nconst CreateNewUser = () => {\n  const [savedData, setSavedData] = useState(null as Object | null);\n  const { t } = useTranslation();\n\n  // Form Validation Schema\n  const CreateNewUserSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .matches(/^[a-z\\s]+$/i, t(\"form.form-validation.name\"))\n      .required(t(\"form.form-validation.required\")),\n    lastName: Yup.string()\n      .matches(/^[a-z\\s]+$/i, t(\"form.form-validation.name\"))\n      .required(t(\"form.form-validation.required\")),\n    dateOfBirth: Yup.date()\n      .max(maxAllowedDateOfBirth(), t(\"form.form-validation.over18years\"))\n      .required(t(\"form.form-validation.required\"))\n      .nullable(),\n  });\n\n  return (\n    <div className=\"wrapper\">\n      <PageHeader title={t(\"page-headers.part3\")} showButton={false} />\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={CreateNewUserSchema}\n        onSubmit={(\n          values: FormValues,\n          { setSubmitting }: FormikHelpers<FormValues>\n        ) => {\n          postNewUser(\"https://reqres.in/api/users/\", values)\n            .then((data) => {\n              setSavedData(data);\n            })\n            .catch((error) => console.error(error));\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          setFieldValue,\n          setFieldTouched,\n        }: FormikProps<FormValues>) => (\n          <Form className=\"form\">\n            <div className=\"form__element-wrapper\">\n              <label>\n                {t(\"form.first-name\")}\n                <Field\n                  className={`form__input ${\n                    errors.firstName &&\n                    touched.firstName &&\n                    \"form__validation-error\"\n                  }`}\n                  name=\"firstName\"\n                  placeholder={t(\"form.placeholder.first-name\")}\n                  required\n                />\n                <div className=\"form__validation-error-message\">\n                  {errors.firstName &&\n                    touched.firstName &&\n                    `${errors.firstName}`}\n                </div>\n              </label>\n            </div>\n\n            <div className=\"form__element-wrapper\">\n              <label>\n                {t(\"form.last-name\")}\n                <Field\n                  className={`form__input ${\n                    errors.lastName &&\n                    touched.lastName &&\n                    \"form__validation-error\"\n                  }`}\n                  name=\"lastName\"\n                  placeholder={t(\"form.placeholder.last-name\")}\n                  required\n                />\n                <div className=\"form__validation-error-message\">\n                  {errors.lastName && touched.lastName && `${errors.lastName}`}\n                </div>\n              </label>\n            </div>\n\n            <div className=\"form__element-wrapper\">\n              <label>\n                {t(\"form.occupation\")}\n                <select\n                  className=\"form__input\"\n                  onChange={handleChange}\n                  name=\"position\"\n                  value={values.position}\n                  required\n                >\n                  <option\n                    value=\"\"\n                    label={t(\"form.placeholder.occupation\")}\n                    disabled\n                    hidden\n                  />\n                  <option value={Positions.SoftwareEngineer}>\n                    {t(\"Positions.SoftwareEngineer\")}\n                  </option>\n                  <option value={Positions.Painter}>\n                    {t(\"Positions.Painter\")}\n                  </option>\n                  <option value={Positions.BusDriver}>\n                    {t(\"Positions.BusDriver\")}\n                  </option>\n                </select>\n              </label>\n            </div>\n\n            <div className=\"form__element-wrapper\">\n              <label>\n                {t(\"form.date-of-birth\")}\n                <DatePicker\n                  dayPlaceholder=\"dd\"\n                  monthPlaceholder=\"mm\"\n                  yearPlaceholder=\"yyyy\"\n                  className={`form__input form__date-picker ${\n                    errors.dateOfBirth &&\n                    touched.dateOfBirth &&\n                    \"form__validation-error\"\n                  }`}\n                  name=\"dateOfBirth\"\n                  value={values.dateOfBirth}\n                  onChange={async (inputValue) => {\n                    await setFieldValue(\"dateOfBirth\", inputValue);\n                    setFieldTouched(\"dateOfBirth\", true);\n                  }}\n                />\n                <div className=\"form__validation-error-message\">\n                  {errors.dateOfBirth &&\n                    touched.dateOfBirth &&\n                    `${errors.dateOfBirth}`}\n                </div>\n              </label>\n            </div>\n\n            <div className=\"form__submit\">\n              <button className=\"create-new-user-button \" type=\"submit\">\n                {t(\"create-new-user-button\")}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n\n      <div>\n        {savedData &&\n          `${t(\"form.response-result\")} ${JSON.stringify(savedData)}`}\n      </div>\n    </div>\n  );\n};\n\nexport default CreateNewUser;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PageHeader from \"../PageHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { fetchUsers } from \"../../utils\";\nimport \"./UserDetails.scss\";\n\ntype RouteParams = {\n  id: string;\n};\n\ntype UserType = {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n};\n\ntype FetchedUserDataType = {\n  data: UserType;\n};\n\nconst UserDetails = () => {\n  const [user, setUser] = useState({} as UserType);\n  let { id } = useParams<RouteParams>();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    fetchUsers(`https://reqres.in/api/users/${id}`)\n      .then((json: FetchedUserDataType) => {\n        setUser(json.data);\n      })\n      .catch((error) => console.error(error));\n  }, [id]);\n\n  return (\n    <div className=\"wrapper\">\n      <PageHeader title={t(\"page-headers.part2\")} showButton={true} />\n      <div className=\"user-details\">\n        <img\n          className=\"user-details__avatar\"\n          src={user.avatar}\n          alt={user.first_name}\n        />\n        <div className=\"dividing-line\"></div>\n        <p>\n          {user.first_name} {user.last_name}\n        </p>\n        <p className=\"user-details__email\">{user.email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetails;\n","// Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//components\nimport Header from \"./components/Header\";\nimport UsersList from \"./components/UsersList\";\nimport UserDetails from \"./components/UserDetails\";\nimport CreateNewUser from \"./components/CreateNewUser\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/user/:id\">\n          <UserDetails />\n        </Route>\n        <Route path=\"/create-new-user\">\n          <CreateNewUser />\n        </Route>\n        <Route path=\"/\">\n          <UsersList />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport EnglishTranslation from \"./en/english-translation.json\";\nimport SpanishTranslation from \"./es/spanish-translation.json\";\n\nexport const resources = {\n  en: { translation: EnglishTranslation },\n  es: { translation: SpanishTranslation },\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    // debug: true,\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.scss\";\nimport App from \"./App\";\n\n// multi language framework react-i18next\nimport \"./i18n/config\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}